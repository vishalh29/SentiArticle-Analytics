Client Background

Home  Our Success Stories  Auvik, Connectwise integration in Grafana
















Client BackgroundClient: A Leading Tech Firm in the USAIndustry Type: IT & ConsultingServices: Software, Business Solutions, ConsultingOrganization Size: 200+Project ObjectiveGet statistics such as uptime,  availability, cpu throughput etc. from Auvik and Connectwise and make a dashboard from it in Grafana.Project DescriptionUnlike many technologies for which plugins are readily available in Grafana, there are none for auvik and Connectwise. So our task was to device a solution through which all the data from Auvik and Connectwise can be fed to Grafana. This data then would be used to plot graphs in Grafana.Our Solution
Setup Postgres on linux
Create appropriate databases, tables and users in it.
Use python to get data from Auvik and Connectwise and perform necessary preprocesing.
In the same python file, Connect to our postgres database.
Ingest this data into postgres database.
Setup Grafana.
Connect Grafana to postgres using the postgres plugin.
Query our postgres database in Grafana to get desired results.
Plot multiple graphs according to client’s requirement and make a dashboard from it
Project Deliverables
Setup Postgres
Setup Postrges in Grafana
Write Python code to get data from Auvik and Connectwise into Postrges
Plot graphs into Grafana according to client’s requirement
Make dashboards for all the graphs
Tools usedGrafanaPostgresVs CodeAWSPostmanLanguage/techniques usedPythonbashSkills usedPythonnetworkingData visualisationDatabases usedPostgresWeb Cloud Servers usedAmazon Web Services (AWS)What are the technical Challenges Faced during Project ExecutionSince, the data received from Auvik was in Json fromat, our first approach was to use Grafana’s built-in Json plugin. But this wasn’t working since, the data received from Auvik was multi-dimensional when the Json plugin required One dimensional data. How the Technical Challenges were SolvedThe above challenge was addressed by transforming the multi- dimensional data into one dimensional when it was store in a python variable. This transformed data was then inserted into Postgres.Project SnapshotsProject website urlhttps://github.com/AjayBidyarthy/Henry-PardoProject Video
https://www.youtube.com/watch?v=7CcbdfjkBzc&ab_channel=Blackcoffer
 

RELATED ARTICLESMORE FROM AUTHOR




 

Integrating Machine Learning Code into Kubeflow Pipeline – Kuberflow MLOps Kubernetes 

 



 

Facial Recognition Attendance System 

 



 

Face Recognition Using DeepFace 

  

 




MOST POPULAR INSIGHTS




Oil prices by the year 2040, and how it will impact... 
August 20, 2022 


 




Data Warehouse to Google Data Studio (Looker) Dashboard 
July 29, 2023 


 




Central School System Logistics Optimization 
September 27, 2019 


 




Steps to Meta-Analysis 
November 4, 2019 


 Load more RECOMMENDED INSIGHTS



 
Anomaly Detection and Analysis for Enhanced Data Integrity and User Experience...

 



 
Steps to Meta-Analysis

 



 
What Analytics & IT Outsourcing engagement model is right for you?

 



 
Android Mobile Apps Portfolio